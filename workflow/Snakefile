# Pipeline for binning
#
# Example call: snakemake -s workflow/Snakefile --configfile config/config.yaml --use-conda --conda-prefix ${CONDA_PREFIX}/pipeline --cores 1 -rpn
# Example call (esb-compute-01 or litcrit): CORES=24 snakemake -s workflow/Snakefile --configfile config/config.yaml --use-conda --conda-prefix ${CONDA_PREFIX}/pipeline --cores $CORES -rpn

##############################
# MODULES
import os, re
import glob
import shutil
import pandas as pd

# importing specific scripts for parsing etc.
# from scripts.utils import find_fast5, assembler_pairs

##############################
# CONFIG
# can be overwritten by using --configfile <path to config> when calling snakemake
# configfile: "config/config.yaml"

include:
    "rules/init.smk"

# print("no basecalling: {}".format(NO_BASECALLING))
# print(INPUT_LINKS)


##############################
# TARGETS & RULES

# List of (main) targets to be created
TARGETS = []

# BINNING
if "bining" in STEPS:
    include:
        "rules/binning.smk"
    TARGETS += [
        "status/binning.done"
    ]

# MDM Cleaner
if "mdmcleaner" in STEPS:
    include:
        "rules/mdmcleaner.smk"
    TARGETS += [
        "status/mdmcleaner.done"
    ]

#CheckM 
if "checkm" in STEPS:
    include:
        "rules/checkm.smk"
    TARGETS += [
        "status/checkm.done"
    ]

# GTDBTK
if "gtdbtk" in STEPS:
    include:
        "rules/gtdbtk.smk"
    TARGETS += [
        "status/gtdbtk.done"
    ]

# COVERAGE
if "coverage" in STEPS:
    include:
        "rules/coverage.smk"
    TARGETS += [
        "status/coverage.done"
    ]

# ABUNDANCE
if "abundance" in STEPS:
    include:
        "rules/abundance.smk"
    TARGETS += [
        "status/abundance.done"
    ]

# No targets
if len(TARGETS) == 0:
    raise Exception('You are not serious. Nothing to be done? Really?')

rule all:
    input:
        TARGETS
